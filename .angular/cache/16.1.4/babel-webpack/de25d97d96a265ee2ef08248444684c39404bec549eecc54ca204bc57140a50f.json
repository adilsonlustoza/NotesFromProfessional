{"ast":null,"code":"import { inject } from '@angular/core';\nimport { UserToken } from '../model/UserToken';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nexport class CurrentResolver {\n  constructor(mock) {\n    this.mock = mock;\n    this.auth = false;\n    this.auth = mock.fetchCurrentUser();\n  }\n  resolve(route, state) {\n    if (this.auth) return this.mock.user;\n    return inject(UserToken).getInstance();\n  }\n}\nCurrentResolver.ɵfac = function CurrentResolver_Factory(t) {\n  return new (t || CurrentResolver)(i0.ɵɵinject(i1.AuthService));\n};\nCurrentResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CurrentResolver,\n  factory: CurrentResolver.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["inject","UserToken","CurrentResolver","constructor","mock","auth","fetchCurrentUser","resolve","route","state","user","getInstance","i0","ɵɵinject","i1","AuthService","factory","ɵfac","providedIn"],"sources":["/home/adilson/project/Angular/NotesForProfessional/src/app/chapter18/services/currentResolver.service.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { UserToken } from '../model/UserToken';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrentResolver implements Resolve<UserToken> {\n\n  public auth: boolean = false;\n\n  constructor(private mock: AuthService) {\n    this.auth = mock.fetchCurrentUser();\n  }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): UserToken | Observable<UserToken> | Promise<UserToken> {\n    if (this.auth)\n      return this.mock.user;\n    return inject(UserToken).getInstance();\n\n  }\n\n\n\n}\n"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAElD,SAASC,SAAS,QAAQ,oBAAoB;;;AAO9C,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;IAFjB,KAAAC,IAAI,GAAY,KAAK;IAG1B,IAAI,CAACA,IAAI,GAAGD,IAAI,CAACE,gBAAgB,EAAE;EACrC;EACAC,OAAOA,CAACC,KAA6B,EAAEC,KAA0B;IAC/D,IAAI,IAAI,CAACJ,IAAI,EACX,OAAO,IAAI,CAACD,IAAI,CAACM,IAAI;IACvB,OAAOV,MAAM,CAACC,SAAS,CAAC,CAACU,WAAW,EAAE;EAExC;;AAZWT,eAAe,C;mBAAfA,eAAe,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAfb,eAAe,C;SAAfA,eAAe;EAAAc,OAAA,EAAfd,eAAe,CAAAe,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}