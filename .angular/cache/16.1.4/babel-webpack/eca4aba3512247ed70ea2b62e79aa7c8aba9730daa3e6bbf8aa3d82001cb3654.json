{"ast":null,"code":"import { inject } from '@angular/core';\nimport { UserToken } from '../model/UserToken';\nimport * as i0 from \"@angular/core\";\nexport class MockauthenticationService {\n  canActivate(currentUser, userId) {\n    return true;\n  }\n  canMatch(currentUser) {\n    return true;\n  }\n}\nMockauthenticationService.ɵfac = function MockauthenticationService_Factory(t) {\n  return new (t || MockauthenticationService)();\n};\nMockauthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MockauthenticationService,\n  factory: MockauthenticationService.ɵfac,\n  providedIn: 'root'\n});\nconst canActivateTeam = (route, state) => {\n  return inject(MockauthenticationService).canActivate(inject(UserToken), route.params[\"id\"]);\n};","map":{"version":3,"names":["inject","UserToken","MockauthenticationService","canActivate","currentUser","userId","canMatch","factory","ɵfac","providedIn","canActivateTeam","route","state","params"],"sources":["/home/adilson/project/Angular/NotesForProfessional/src/app/chapter18/services/mockauthentication.service.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { UserToken } from '../model/UserToken';\nimport { CanActivateFn, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockauthenticationService {\n\n  canActivate(currentUser: UserToken, userId: string): boolean {\n    return true;\n  }\n  canMatch(currentUser: UserToken): boolean {\n    return true;\n  }\n\n\n\n}\n\n\nconst canActivateTeam: CanActivateFn =\n\n  (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\n\n    return inject(MockauthenticationService).canActivate(inject(UserToken), route.params[\"id\"]);\n\n\n\n  };\n"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAClD,SAASC,SAAS,QAAQ,oBAAoB;;AAM9C,OAAM,MAAOC,yBAAyB;EAEpCC,WAAWA,CAACC,WAAsB,EAAEC,MAAc;IAChD,OAAO,IAAI;EACb;EACAC,QAAQA,CAACF,WAAsB;IAC7B,OAAO,IAAI;EACb;;AAPWF,yBAAyB,C;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB,C;SAAzBA,yBAAyB;EAAAK,OAAA,EAAzBL,yBAAyB,CAAAM,IAAA;EAAAC,UAAA,EAFxB;AAAM;AAgBpB,MAAMC,eAAe,GAEnBA,CAACC,KAA6B,EAAEC,KAA0B,KAAI;EAE5D,OAAOZ,MAAM,CAACE,yBAAyB,CAAC,CAACC,WAAW,CAACH,MAAM,CAACC,SAAS,CAAC,EAAEU,KAAK,CAACE,MAAM,CAAC,IAAI,CAAC,CAAC;AAI7F,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}