{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../model/UserToken\";\nexport class AuthService {\n  constructor(router, user) {\n    this.router = router;\n    this.user = user;\n    this.auth = false;\n  }\n  fetchCurrentUser() {\n    return true;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.UserToken));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","router","user","auth","fetchCurrentUser","i0","ɵɵinject","i1","Router","i2","UserToken","factory","ɵfac","providedIn"],"sources":["/home/adilson/project/Angular/NotesForProfessional/src/app/chapter18/services/auth.service.ts"],"sourcesContent":["import { AuthGuard } from './../guards/authguard';\nimport { Injectable, inject } from '@angular/core';\nimport { UserToken } from '../model/UserToken';\nimport { Router } from \"@angular/router\"\n\nexport @Injectable({\n  providedIn: 'root'\n})\nclass AuthService {\n\n  public auth: boolean = false;\n\n  constructor(private router: Router, private user: UserToken) { }\n\n\n\n  fetchCurrentUser(): boolean{\n    return true;\n  }\n\n\n\n}\n\n"],"mappings":";;;AAKA,OAAM,MAGAA,WAAW;EAIfC,YAAoBC,MAAc,EAAUC,IAAe;IAAvC,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,IAAI,GAAJA,IAAI;IAFzC,KAAAC,IAAI,GAAY,KAAK;EAEmC;EAI/DC,gBAAgBA,CAAA;IACd,OAAO,IAAI;EACb;;AAVIL,WAAW,C;mBAAXA,WAAW,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,SAAA;AAAA;AAAXX,WAAW,C;SAAXA,WAAW;EAAAY,OAAA,EAAXZ,WAAW,CAAAa,IAAA;EAAAC,UAAA,EAFH;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}