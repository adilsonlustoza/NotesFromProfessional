{"ast":null,"code":"import { Validators, FormArray } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction Chapter301Component_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i_r3, \" \");\n  }\n}\nfunction Chapter301Component_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Number of tickets is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction Chapter301Component_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, Chapter301Component_div_12_div_1_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.Controls[\"numberOfTickets\"].errors[\"required\"]);\n  }\n}\nfunction Chapter301Component_div_13_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction Chapter301Component_div_13_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, Chapter301Component_div_13_div_9_div_1_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ticket_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ticket_r5.controls[\"name\"].errors[\"required\"]);\n  }\n}\nfunction Chapter301Component_div_13_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction Chapter301Component_div_13_div_14_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email must be a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction Chapter301Component_div_13_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, Chapter301Component_div_13_div_14_div_1_Template, 2, 0, \"div\", 17);\n    i0.ɵɵtemplate(2, Chapter301Component_div_13_div_14_div_2_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ticket_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ticket_r5.controls[\"email\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ticket_r5.controls[\"email\"].errors[\"email\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nfunction Chapter301Component_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 19)(2, \"h5\", 20);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 21)(5, \"div\", 22)(6, \"label\", 6);\n    i0.ɵɵtext(7, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 23);\n    i0.ɵɵtemplate(9, Chapter301Component_div_13_div_9_Template, 2, 1, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 22)(11, \"label\", 6);\n    i0.ɵɵtext(12, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 24);\n    i0.ɵɵtemplate(14, Chapter301Component_div_13_div_14_Template, 3, 2, \"div\", 10);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ticket_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Ticket \", i_r6 + 1, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ticket_r5);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx_r2.submitted && ticket_r5.controls[\"name\"].errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.submitted && ticket_r5.controls[\"name\"].errors);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r2.submitted && ticket_r5.controls[\"email\"].errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.submitted && ticket_r5.controls[\"email\"].errors);\n  }\n}\nconst _c1 = function () {\n  return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n};\nexport let Chapter301Component = /*#__PURE__*/(() => {\n  class Chapter301Component {\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.submitted = false;\n    }\n    ngOnInit() {\n      this.dynamicForm = this.formBuilder.group({\n        numberOfTickets: ['', Validators.required],\n        tickets: new FormArray([])\n      });\n    }\n    get Controls() {\n      return this.dynamicForm.controls;\n    }\n    //get ArrayControls() { return this.Controls['tickets'] as FormArray; }\n    get ArrayControls() {\n      return this.Controls['tickets'];\n    }\n    get ticketFormGroups() {\n      return this.ArrayControls.controls;\n    }\n    onChangesTickets(e) {\n      const numberOfTickets = e.target.value || 0;\n      if (this.ArrayControls.length < numberOfTickets) {\n        if (this.ArrayControls.length === 0) {\n          this.onClear();\n        }\n        for (let i = this.ArrayControls.length; i < numberOfTickets; i++) {\n          this.ArrayControls.push(this.formBuilder.group({\n            name: ['', Validators.required],\n            email: ['', [Validators.required, Validators.email]]\n          }));\n        }\n      } else {\n        for (let i = this.ArrayControls.length; i >= numberOfTickets; i--) {\n          this.ArrayControls.removeAt(i);\n        }\n      }\n    }\n    onSubmit() {\n      this.submitted = true;\n      // stop here if form is invalid\n      if (this.dynamicForm.invalid) {\n        return;\n      }\n      // display form values on success\n      alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.dynamicForm.value, null, 4));\n    }\n    onReset() {\n      // reset whole form back to initial state\n      this.submitted = false;\n      this.dynamicForm.reset();\n      this.ArrayControls.clear();\n    }\n    onClear() {\n      // clear errors and reset ticket fields\n      this.submitted = false;\n      this.ArrayControls.reset();\n    }\n  }\n  Chapter301Component.ɵfac = function Chapter301Component_Factory(t) {\n    return new (t || Chapter301Component)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  Chapter301Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Chapter301Component,\n    selectors: [[\"app-chapter301\"]],\n    decls: 21,\n    vars: 8,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"card\", \"m-3\"], [1, \"card-header\"], [1, \"card-body\", \"border-bottom\"], [1, \"row\"], [1, \"col-3\", \"mb-3\"], [1, \"form-label\"], [\"formControlName\", \"numberOfTickets\", 1, \"form-control\", 3, \"ngClass\", \"change\"], [\"value\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"class\", \"list-group list-group-flush\", 4, \"ngFor\", \"ngForOf\"], [1, \"card-footer\", \"text-center\", \"border-top-0\"], [1, \"btn\", \"btn-primary\", \"me-1\"], [\"type\", \"reset\", 1, \"btn\", \"btn-secondary\", \"me-1\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"list-group\", \"list-group-flush\"], [1, \"list-group-item\"], [1, \"card-title\"], [1, \"row\", 3, \"formGroup\"], [1, \"col-6\", \"mb-3\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"]],\n    template: function Chapter301Component_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function Chapter301Component_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"h5\", 2);\n        i0.ɵɵtext(3, \"Angular 14 Dynamic Reactive Forms Example\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Number of Tickets\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"select\", 7);\n        i0.ɵɵlistener(\"change\", function Chapter301Component_Template_select_change_9_listener($event) {\n          return ctx.onChangesTickets($event);\n        });\n        i0.ɵɵelement(10, \"option\", 8);\n        i0.ɵɵtemplate(11, Chapter301Component_option_11_Template, 2, 1, \"option\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, Chapter301Component_div_12_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(13, Chapter301Component_div_13_Template, 15, 10, \"div\", 11);\n        i0.ɵɵelementStart(14, \"div\", 12)(15, \"button\", 13);\n        i0.ɵɵtext(16, \"Buy Tickets\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function Chapter301Component_Template_button_click_17_listener() {\n          return ctx.onReset();\n        });\n        i0.ɵɵtext(18, \" Reset \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function Chapter301Component_Template_button_click_19_listener() {\n          return ctx.onClear();\n        });\n        i0.ɵɵtext(20, \" Clear \");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.dynamicForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.submitted && ctx.dynamicForm.controls[\"numberOfTickets\"].errors));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(7, _c1));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.Controls[\"numberOfTickets\"].errors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ticketFormGroups);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return Chapter301Component;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}