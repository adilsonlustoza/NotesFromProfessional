{"ast":null,"code":"import * as moment from 'moment';\nimport * as i0 from \"@angular/core\";\nexport class DynamicPipe {\n  transform(value, modifier) {\n    if (!modifier) return value;\n    // Evaluate pipe string\n    return eval('this.' + modifier + \"('\" + value + \"')\");\n  }\n  // Returns 'enabled' or 'disabled' based on input value\n  statusFromBoolean(value) {\n    switch (value) {\n      case 'true':\n      case '1':\n        return 'enabled';\n      default:\n        return 'disabled';\n    }\n  }\n  // Returns a human friendly time format e.g: '14 minutes ago', 'yesterday'\n  humanizeDate(value) {\n    // Humanize if date difference is within a week from now else returns 'December 20, 2016'  format\n    if (moment().diff(moment(value), 'days') < 8) return moment(value).fromNow();\n    return moment(value).format('MMMM Do YYYY');\n  }\n}\nDynamicPipe.ɵfac = function DynamicPipe_Factory(t) {\n  return new (t || DynamicPipe)();\n};\nDynamicPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"dynamic\",\n  type: DynamicPipe,\n  pure: true\n});\nexport const DYNAMIC_PIPES = [DynamicPipe];","map":{"version":3,"names":["moment","DynamicPipe","transform","value","modifier","eval","statusFromBoolean","humanizeDate","diff","fromNow","format","pure","DYNAMIC_PIPES"],"sources":["/home/adilson/project/Angular/NotesForProfessional/src/app/chapter14/TableComponent/pipes/dynamic.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\n@Pipe({\n  name: 'dynamic',\n})\nexport class DynamicPipe implements PipeTransform {\n\n\n  transform(value: string, modifier: string) {\n    if (!modifier) return value;\n    // Evaluate pipe string\n    return eval('this.' + modifier + \"('\" + value + \"')\");\n  }\n  // Returns 'enabled' or 'disabled' based on input value\n  statusFromBoolean(value: string): string {\n    switch (value) {\n      case 'true':\n      case '1':\n        return 'enabled';\n      default:\n        return 'disabled';\n    }\n  }\n\n  // Returns a human friendly time format e.g: '14 minutes ago', 'yesterday'\n  humanizeDate(value: string): string {\n    // Humanize if date difference is within a week from now else returns 'December 20, 2016'  format\n    if (moment().diff(moment(value), 'days') < 8)\n      return moment(value).fromNow();\n    return moment(value).format('MMMM Do YYYY');\n  }\n}\n\nexport const DYNAMIC_PIPES = [DynamicPipe];\n"],"mappings":"AACA,OAAO,KAAKA,MAAM,MAAM,QAAQ;;AAKhC,OAAM,MAAOC,WAAW;EAGtBC,SAASA,CAACC,KAAa,EAAEC,QAAgB;IACvC,IAAI,CAACA,QAAQ,EAAE,OAAOD,KAAK;IAC3B;IACA,OAAOE,IAAI,CAAC,OAAO,GAAGD,QAAQ,GAAG,IAAI,GAAGD,KAAK,GAAG,IAAI,CAAC;EACvD;EACA;EACAG,iBAAiBA,CAACH,KAAa;IAC7B,QAAQA,KAAK;MACX,KAAK,MAAM;MACX,KAAK,GAAG;QACN,OAAO,SAAS;MAClB;QACE,OAAO,UAAU;;EAEvB;EAEA;EACAI,YAAYA,CAACJ,KAAa;IACxB;IACA,IAAIH,MAAM,EAAE,CAACQ,IAAI,CAACR,MAAM,CAACG,KAAK,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,EAC1C,OAAOH,MAAM,CAACG,KAAK,CAAC,CAACM,OAAO,EAAE;IAChC,OAAOT,MAAM,CAACG,KAAK,CAAC,CAACO,MAAM,CAAC,cAAc,CAAC;EAC7C;;AAzBWT,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;;QAAXA,WAAW;EAAAU,IAAA;AAAA;AA4BxB,OAAO,MAAMC,aAAa,GAAG,CAACX,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}