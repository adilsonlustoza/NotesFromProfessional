{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class OrderBy {\n  constructor() {\n    this.value = [];\n  }\n  static _orderByComparator(a, b) {\n    if (a === null || typeof a === 'undefined') a = 0;\n    if (b === null || typeof b === 'undefined') b = 0;\n    if (isNaN(parseFloat(a)) || !isFinite(a) || isNaN(parseFloat(b)) || !isFinite(b)) {\n      //Isn't a number so lowercase the string to properly compare\n      if (a.toLowerCase() < b.toLowerCase()) return -1;\n      if (a.toLowerCase() > b.toLowerCase()) return 1;\n    } else {\n      //Parse strings as numbers to compare properly\n      if (parseFloat(a) < parseFloat(b)) return -1;\n      if (parseFloat(a) > parseFloat(b)) return 1;\n    }\n    return 0; //equal each other\n  }\n\n  transform(input, config = '+') {\n    //make a copy of the input's reference\n    this.value = [...input];\n    let value = this.value;\n    if (!Array.isArray(value)) return value;\n    if (!Array.isArray(config) || Array.isArray(config) && config.length === 1) {\n      let propertyToCheck = !Array.isArray(config) ? config : config[0];\n      let desc = propertyToCheck.substr(0, 1) === '-';\n      //Basic array\n      if (!propertyToCheck || propertyToCheck === '-' || propertyToCheck === '+') {\n        return !desc ? value.sort() : value.sort().reverse();\n      } else {\n        let property = propertyToCheck.substr(0, 1) === '+' || propertyToCheck.substr(0, 1) === '-' ? propertyToCheck.substr(1) : propertyToCheck;\n        return value.sort(function (a, b) {\n          return !desc ? OrderBy._orderByComparator(a[property], b[property]) : -OrderBy._orderByComparator(a[property], b[property]);\n        });\n      }\n    } else {\n      //Loop over property of the array in order and sort\n      return value.sort(function (a, b) {\n        for (let i = 0; i < config.length; i++) {\n          let desc = config[i].substr(0, 1) === '-';\n          let property = config[i].substr(0, 1) === '+' || config[i].substr(0, 1) === '-' ? config[i].substr(1) : config[i];\n          let comparison = !desc ? OrderBy._orderByComparator(a[property], b[property]) : -OrderBy._orderByComparator(a[property], b[property]);\n          //Don't return 0 yet in case of needing to sort by next property\n          if (comparison !== 0) return comparison;\n        }\n        return 0; //equal each other\n      });\n    }\n  }\n}\n\nOrderBy.ɵfac = function OrderBy_Factory(t) {\n  return new (t || OrderBy)();\n};\nOrderBy.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"orderBy\",\n  type: OrderBy,\n  pure: true\n});","map":{"version":3,"names":["OrderBy","constructor","value","_orderByComparator","a","b","isNaN","parseFloat","isFinite","toLowerCase","transform","input","config","Array","isArray","length","propertyToCheck","desc","substr","sort","reverse","property","i","comparison","pure"],"sources":["/home/adilson/project/Angular/NotesForProfessional/src/app/chapter15/orderBy.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'orderBy'\n})\nexport class OrderBy implements PipeTransform {\n\n  value: string[] = [];\n\n  static _orderByComparator(a: any, b: any): number {\n\n    if (a === null || typeof a === 'undefined') a = 0;\n    if (b === null || typeof b === 'undefined') b = 0;\n\n    if ((isNaN(parseFloat(a)) || !isFinite(a)) || (isNaN(parseFloat(b)) || !isFinite(b))) {\n      //Isn't a number so lowercase the string to properly compare\n      if (a.toLowerCase() < b.toLowerCase()) return -1;\n      if (a.toLowerCase() > b.toLowerCase()) return 1;\n    } else {\n      //Parse strings as numbers to compare properly\n      if (parseFloat(a) < parseFloat(b)) return -1;\n      if (parseFloat(a) > parseFloat(b)) return 1;\n    }\n    return 0; //equal each other\n  }\n\n\n  transform(input: any, config: any = '+'): any {\n    //make a copy of the input's reference\n    this.value = [...input];\n    let value = this.value;\n    if (!Array.isArray(value)) return value;\n    if (!Array.isArray(config) || (Array.isArray(config) && config.length === 1)) {\n      let propertyToCheck: string = !Array.isArray(config) ? config : config[0];\n      let desc = propertyToCheck.substr(0, 1) === '-';\n      //Basic array\n      if (!propertyToCheck || propertyToCheck === '-' || propertyToCheck === '+') {\n        return !desc ? value.sort() : value.sort().reverse();\n      } else {\n        let property: string = propertyToCheck.substr(0, 1) === '+' || propertyToCheck.substr(0, 1)\n          === '-'\n          ? propertyToCheck.substr(1)\n          : propertyToCheck;\n        return value.sort(function (a: any, b: any) {\n\n          return !desc\n            ? OrderBy._orderByComparator(a[property], b[property]) : -OrderBy._orderByComparator(a[property], b[property]);\n        });\n      }\n    } else {\n      //Loop over property of the array in order and sort\n      return value.sort(function (a: any, b: any) {\n        for (let i: number = 0; i < config.length; i++) {\n          let desc = config[i].substr(0, 1) === '-';\n          let property = config[i].substr(0, 1) === '+' || config[i].substr(0, 1) === '-'\n            ? config[i].substr(1)\n            : config[i];\n          let comparison = !desc\n            ? OrderBy._orderByComparator(a[property], b[property])\n            : -OrderBy._orderByComparator(a[property], b[property]);\n          //Don't return 0 yet in case of needing to sort by next property\n          if (comparison !== 0) return comparison;\n        }\n        return 0; //equal each other\n      });\n    }\n  }\n}\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}