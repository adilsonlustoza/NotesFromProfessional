{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction Chapter2Component_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const person_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", person_r2.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(person_r2.name);\n  }\n}\nfunction Chapter2Component_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 12);\n    i0.ɵɵtext(2, \"Alias:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r4 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"alias-\", i_r4, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"alias-\", i_r4, \"\");\n    i0.ɵɵproperty(\"formControlName\", i_r4);\n  }\n}\nexport class Chapter2Component {\n  constructor(fb) {\n    this.fb = fb;\n    this.persons = [{\n      type: 'F',\n      name: \"Fisica\"\n    }, {\n      type: \"J\",\n      name: \"Juridica\"\n    }];\n  }\n  ngOnInit() {\n    this.profileForm = this.fb.group({\n      firstName: ['', Validators.required],\n      personType: [''],\n      aliases: this.fb.array([this.fb.control('')])\n    });\n  }\n  get aliases() {\n    return this.profileForm.get('aliases');\n  }\n  addAlias() {\n    this.aliases.push(this.fb.control(''));\n  }\n  onSubmit() {\n    console.log(this.profileForm.value);\n  }\n}\nChapter2Component.ɵfac = function Chapter2Component_Factory(t) {\n  return new (t || Chapter2Component)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nChapter2Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Chapter2Component,\n  selectors: [[\"app-chapter2\"]],\n  decls: 17,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"name\", \"firstName\", \"id\", \"firstName\", \"formControlName\", \"firstName\", 1, \"form-control\"], [\"for\", \"personType\"], [\"name\", \"personType\", \"id\", \"personType\", \"formControlName\", \"personType\", 1, \"form-control\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"formArrayName\", \"aliases\"], [\"type\", \"button\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", \"value\", \"Salvar\", 1, \"btn\", \"btn-primary\", \"mt-4\"], [3, \"ngValue\"], [3, \"for\"], [\"type\", \"text\", 3, \"id\", \"formControlName\"]],\n  template: function Chapter2Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function Chapter2Component_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"firstName\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"personType\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"select\", 5);\n      i0.ɵɵtemplate(9, Chapter2Component_option_9_Template, 2, 2, \"option\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 7)(11, \"h2\");\n      i0.ɵɵtext(12, \"Aliases\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function Chapter2Component_Template_button_click_13_listener() {\n        return ctx.addAlias();\n      });\n      i0.ɵɵtext(14, \"+ Add another alias\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, Chapter2Component_div_15_Template, 4, 3, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 10);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.profileForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.persons);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.aliases.controls);\n    }\n  },\n  dependencies: [i2.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormArrayName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","person_r2","type","ɵɵadvance","ɵɵtextInterpolate","name","ɵɵelement","ɵɵpropertyInterpolate1","i_r4","Chapter2Component","constructor","fb","persons","ngOnInit","profileForm","group","firstName","required","personType","aliases","array","control","get","addAlias","push","onSubmit","console","log","value","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","Chapter2Component_Template","rf","ctx","ɵɵlistener","Chapter2Component_Template_form_ngSubmit_0_listener","ɵɵtemplate","Chapter2Component_option_9_Template","Chapter2Component_Template_button_click_13_listener","Chapter2Component_div_15_Template","controls"],"sources":["/home/adilson/project/Angular/NotesForProfessional/src/app/chapter2/chapter2.component.ts","/home/adilson/project/Angular/NotesForProfessional/src/app/chapter2/chapter2.component.html"],"sourcesContent":["import { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chapter2',\n  templateUrl: './chapter2.component.html',\n  styleUrls: ['./chapter2.component.css']\n})\nexport class Chapter2Component implements OnInit {\n\n\n  profileForm!: FormGroup;\n\n\n  persons  =[{type:'F',name:\"Fisica\"},{type:\"J\",name:\"Juridica\"}];\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n\n     this.profileForm = this.fb.group({\n      firstName: ['', Validators.required],\n      personType: [''],\n\n      aliases: this.fb.array([\n        this.fb.control('')\n      ])\n    });\n\n  }\n\n  get aliases() {\n    return this.profileForm.get('aliases') as FormArray;\n  }\n\n  addAlias() {\n    this.aliases.push(this.fb.control(''));\n  }\n\n  onSubmit() {\n    console.log(this.profileForm.value);\n  }\n\n}\n","<form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\n\n  <div class=\"form-group\">\n    <label for=\"firstName\">firstName</label>\n    <input type=\"text\" class=\"form-control\" name=\"firstName\" id=\"firstName\" formControlName=\"firstName\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"personType\">personType</label>\n    <select class=\"form-control\" name=\"personType\" id=\"personType\" formControlName=\"personType\">\n      <option *ngFor=\"let person of this.persons\" [ngValue]=\"person.type\">{{person.name}}</option>\n    </select>\n  </div>\n\n<div formArrayName=\"aliases\">\n  <h2>Aliases</h2>\n  <button type=\"button\" (click)=\"addAlias()\">+ Add another alias</button>\n\n  <div *ngFor=\"let alias of aliases.controls; let i=index\">\n    <!-- The repeated alias template -->\n    <label for=\"alias-{{ i }}\">Alias:</label>\n    <input id=\"alias-{{ i }}\" type=\"text\" [formControlName]=\"i\">\n  </div>\n</div>\n\n\n  <input type=\"submit\" class=\"btn btn-primary mt-4\" value=\"Salvar\">\n\n\n\n\n</form>\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}