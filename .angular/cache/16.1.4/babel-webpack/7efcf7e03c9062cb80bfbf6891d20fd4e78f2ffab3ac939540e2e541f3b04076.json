{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class Chapter2Component {\n  constructor(fb) {\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.profileForm = this.fb.group({\n      firstName: ['', Validators.required],\n      personType: [''],\n      aliases: this.fb.array([this.fb.control('')])\n    });\n  }\n  get aliases() {\n    return this.profileForm.get('aliases');\n  }\n  addAlias() {\n    this.aliases.push(this.fb.control(''));\n  }\n  onSubmit() {\n    console.log(this.profileForm.value);\n  }\n}\nChapter2Component.ɵfac = function Chapter2Component_Factory(t) {\n  return new (t || Chapter2Component)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nChapter2Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Chapter2Component,\n  selectors: [[\"app-chapter2\"]],\n  decls: 14,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"name\", \"firstName\", \"id\", \"firstName\", \"formControlName\", \"firstName\", 1, \"form-control\"], [\"for\", \"personType\"], [\"name\", \"personType\", \"id\", \"tipo\", \"formControlName\", \"personType\", 1, \"form-control\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"type\", \"submit\", \"value\", \"Salvar\", 1, \"btn\", \"btn-primary\", \"mt-4\"]],\n  template: function Chapter2Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function Chapter2Component_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"firstName\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"personType\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"select\", 5)(9, \"option\", 6);\n      i0.ɵɵtext(10, \"Pessoa f\\u00EDsica\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"option\", 7);\n      i0.ɵɵtext(12, \"Pessoa jur\\u00EDdica\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(13, \"input\", 8);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.profileForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","Chapter2Component","constructor","fb","ngOnInit","profileForm","group","firstName","required","personType","aliases","array","control","get","addAlias","push","onSubmit","console","log","value","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","Chapter2Component_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","Chapter2Component_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty"],"sources":["/home/adilson/project/Angular/NotesForProfessional/src/app/chapter2/chapter2.component.ts","/home/adilson/project/Angular/NotesForProfessional/src/app/chapter2/chapter2.component.html"],"sourcesContent":["import { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chapter2',\n  templateUrl: './chapter2.component.html',\n  styleUrls: ['./chapter2.component.css']\n})\nexport class Chapter2Component implements OnInit {\n\n\n  profileForm!: FormGroup;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n\n     this.profileForm = this.fb.group({\n      firstName: ['', Validators.required],\n      personType: [''],\n\n      aliases: this.fb.array([\n        this.fb.control('')\n      ])\n    });\n\n  }\n\n  get aliases() {\n    return this.profileForm.get('aliases') as FormArray;\n  }\n\n  addAlias() {\n    this.aliases.push(this.fb.control(''));\n  }\n\n  onSubmit() {\n    console.log(this.profileForm.value);\n  }\n\n}\n","<form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\n\n  <div class=\"form-group\">\n    <label for=\"firstName\">firstName</label>\n    <input type=\"text\" class=\"form-control\" name=\"firstName\" id=\"firstName\" formControlName=\"firstName\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"personType\">personType</label>\n    <select class=\"form-control\" name=\"personType\" id=\"tipo\" formControlName=\"personType\">\n      <option value=\"1\">Pessoa física</option>\n      <option value=\"2\">Pessoa jurídica</option>\n    </select>\n  </div>\n\n\n\n  <input type=\"submit\" class=\"btn btn-primary mt-4\" value=\"Salvar\">\n\n\n\n\n</form>\n\n\n"],"mappings":"AAAA,SAA4CA,UAAU,QAAQ,gBAAgB;;;AAQ9E,OAAM,MAAOC,iBAAiB;EAK5BC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;EAAiB;EAEvCC,QAAQA,CAAA;IAEL,IAAI,CAACC,WAAW,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAChCC,SAAS,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MACpCC,UAAU,EAAE,CAAC,EAAE,CAAC;MAEhBC,OAAO,EAAE,IAAI,CAACP,EAAE,CAACQ,KAAK,CAAC,CACrB,IAAI,CAACR,EAAE,CAACS,OAAO,CAAC,EAAE,CAAC,CACpB;KACF,CAAC;EAEJ;EAEA,IAAIF,OAAOA,CAAA;IACT,OAAO,IAAI,CAACL,WAAW,CAACQ,GAAG,CAAC,SAAS,CAAc;EACrD;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACJ,OAAO,CAACK,IAAI,CAAC,IAAI,CAACZ,EAAE,CAACS,OAAO,CAAC,EAAE,CAAC,CAAC;EACxC;EAEAI,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,WAAW,CAACc,KAAK,CAAC;EACrC;;AA9BWlB,iBAAiB,C;mBAAjBA,iBAAiB,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAjBtB,iBAAiB,C;QAAjBA,iBAAiB;EAAAuB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR9BV,EAAA,CAAAY,cAAA,cAAwD;MAAxBZ,EAAA,CAAAa,UAAA,sBAAAC,oDAAA;QAAA,OAAYH,GAAA,CAAAf,QAAA,EAAU;MAAA,EAAC;MAErDI,EAAA,CAAAY,cAAA,aAAwB;MACCZ,EAAA,CAAAe,MAAA,gBAAS;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MACxChB,EAAA,CAAAiB,SAAA,eAAoG;MACtGjB,EAAA,CAAAgB,YAAA,EAAM;MAENhB,EAAA,CAAAY,cAAA,aAAwB;MACEZ,EAAA,CAAAe,MAAA,iBAAU;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MAC1ChB,EAAA,CAAAY,cAAA,gBAAsF;MAClEZ,EAAA,CAAAe,MAAA,0BAAa;MAAAf,EAAA,CAAAgB,YAAA,EAAS;MACxChB,EAAA,CAAAY,cAAA,iBAAkB;MAAAZ,EAAA,CAAAe,MAAA,4BAAe;MAAAf,EAAA,CAAAgB,YAAA,EAAS;MAM9ChB,EAAA,CAAAiB,SAAA,gBAAiE;MAKnEjB,EAAA,CAAAgB,YAAA,EAAO;;;MAtBDhB,EAAA,CAAAkB,UAAA,cAAAP,GAAA,CAAA1B,WAAA,CAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}