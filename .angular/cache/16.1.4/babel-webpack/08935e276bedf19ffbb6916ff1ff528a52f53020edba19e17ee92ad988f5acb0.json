{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CountdownPipe {\n  constructor() {\n    this.remainingTime = 5000;\n  }\n  transform(value, interval = 1000) {\n    if (!parseInt(value, 10)) {\n      return null;\n    }\n    if (typeof this.remainingTime !== 'number') {\n      this.remainingTime = parseInt(value, 10);\n    }\n    if (!this.interval) {\n      this.interval = setInterval(() => {\n        this.remainingTime--;\n        if (this.remainingTime <= 0) {\n          this.remainingTime = 0;\n          clearInterval(this.interval);\n          delete this.interval;\n        }\n      }, interval);\n    }\n    return this.remainingTime;\n  }\n  ngOnDestroy() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n}\nCountdownPipe.ɵfac = function CountdownPipe_Factory(t) {\n  return new (t || CountdownPipe)();\n};\nCountdownPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"countdown\",\n  type: CountdownPipe,\n  pure: false\n});","map":{"version":3,"names":["CountdownPipe","constructor","remainingTime","transform","value","interval","parseInt","setInterval","clearInterval","ngOnDestroy","pure"],"sources":["/home/adilson/project/Angular/NotesForProfessional/src/app/chapter14/TableComponent/pipes/countdown.pipe.ts"],"sourcesContent":["import { OnDestroy, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'countdown',\n  pure:false\n})\nexport class CountdownPipe implements PipeTransform, OnDestroy {\n\n  private interval: any;\n\n  private remainingTime: number=5000;\n\n\n  transform(value: any, interval: number = 1000): any {\n\n    if (!parseInt(value, 10)) {\n         return null;\n    }\n\n    if (typeof this.remainingTime !== 'number') {\n      this.remainingTime = parseInt(value, 10);\n    }\n\n    if (!this.interval) {\n\n\n      this.interval = setInterval(() => {\n\n        this.remainingTime--;\n\n        if (this.remainingTime <= 0) {\n\n          this.remainingTime = 0;\n\n          clearInterval(this.interval);\n\n          delete this.interval;\n\n        }\n      }, interval);\n    }\n    return this.remainingTime;\n  }\n\n\n  ngOnDestroy(): void {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n}\n"],"mappings":";AAMA,OAAM,MAAOA,aAAa;EAJ1BC,YAAA;IAQU,KAAAC,aAAa,GAAS,IAAI;;EAGlCC,SAASA,CAACC,KAAU,EAAEC,QAAA,GAAmB,IAAI;IAE3C,IAAI,CAACC,QAAQ,CAACF,KAAK,EAAE,EAAE,CAAC,EAAE;MACrB,OAAO,IAAI;;IAGhB,IAAI,OAAO,IAAI,CAACF,aAAa,KAAK,QAAQ,EAAE;MAC1C,IAAI,CAACA,aAAa,GAAGI,QAAQ,CAACF,KAAK,EAAE,EAAE,CAAC;;IAG1C,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;MAGlB,IAAI,CAACA,QAAQ,GAAGE,WAAW,CAAC,MAAK;QAE/B,IAAI,CAACL,aAAa,EAAE;QAEpB,IAAI,IAAI,CAACA,aAAa,IAAI,CAAC,EAAE;UAE3B,IAAI,CAACA,aAAa,GAAG,CAAC;UAEtBM,aAAa,CAAC,IAAI,CAACH,QAAQ,CAAC;UAE5B,OAAO,IAAI,CAACA,QAAQ;;MAGxB,CAAC,EAAEA,QAAQ,CAAC;;IAEd,OAAO,IAAI,CAACH,aAAa;EAC3B;EAGAO,WAAWA,CAAA;IACT,IAAI,IAAI,CAACJ,QAAQ,EAAE;MACjBG,aAAa,CAAC,IAAI,CAACH,QAAQ,CAAC;;EAEhC;;AA3CWL,aAAa,C;mBAAbA,aAAa;AAAA;AAAbA,aAAa,C;;QAAbA,aAAa;EAAAU,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}