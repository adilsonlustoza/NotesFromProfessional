{"ast":null,"code":"import { inject } from '@angular/core';\nimport { UserToken } from '../model/UserToken';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.user = inject(UserToken).getInstance();\n  }\n  fetchCurrentUser() {\n    return this.user === null ? false : true;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)();\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["inject","UserToken","AuthService","constructor","user","getInstance","fetchCurrentUser","factory","ɵfac","providedIn"],"sources":["/home/adilson/project/Angular/NotesForProfessional/src/app/chapter18/services/auth.service.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { UserToken } from '../model/UserToken';\n\nexport @Injectable({\n  providedIn: 'root'\n})\nclass AuthService {\n\n  user: UserToken ;\n\n  constructor() {\n    this.user = inject(UserToken).getInstance();\n  }\n\n\n  fetchCurrentUser(): boolean {\n    return this.user===null?false:true;\n  }\n\n\n\n\n\n\n}\n\n"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAClD,SAASC,SAAS,QAAQ,oBAAoB;;AAE9C,OAAM,MAGAC,WAAW;EAIfC,YAAA;IACE,IAAI,CAACC,IAAI,GAAGJ,MAAM,CAACC,SAAS,CAAC,CAACI,WAAW,EAAE;EAC7C;EAGAC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACF,IAAI,KAAG,IAAI,GAAC,KAAK,GAAC,IAAI;EACpC;;AAXIF,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAAK,OAAA,EAAXL,WAAW,CAAAM,IAAA;EAAAC,UAAA,EAFH;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}