{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction DynamicFormQuestionComponent_input_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formControlName\", ctx_r0.question.key)(\"id\", ctx_r0.question.key)(\"type\", ctx_r0.question.type);\n  }\n}\nfunction DynamicFormQuestionComponent_select_5_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const opt_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", opt_r4.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(opt_r4.value);\n  }\n}\nfunction DynamicFormQuestionComponent_select_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"select\", 6);\n    i0.ɵɵtemplate(1, DynamicFormQuestionComponent_select_5_option_1_Template, 2, 2, \"option\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", ctx_r1.question.key)(\"formControlName\", ctx_r1.question.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.question.options);\n  }\n}\nfunction DynamicFormQuestionComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.question.label, \" is required\");\n  }\n}\nexport class DynamicFormQuestionComponent {\n  get isValid() {\n    return this.form.controls[this.question.key].valid;\n  }\n}\nDynamicFormQuestionComponent.ɵfac = function DynamicFormQuestionComponent_Factory(t) {\n  return new (t || DynamicFormQuestionComponent)();\n};\nDynamicFormQuestionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DynamicFormQuestionComponent,\n  selectors: [[\"app-question\"]],\n  inputs: {\n    question: \"question\",\n    form: \"form\"\n  },\n  decls: 7,\n  vars: 7,\n  consts: [[3, \"formGroup\"], [3, \"ngSwitch\"], [3, \"formControlName\", \"id\", \"type\", 4, \"ngSwitchCase\"], [3, \"id\", \"formControlName\", 4, \"ngSwitchCase\"], [\"class\", \"errorMessage\", 4, \"ngIf\"], [3, \"formControlName\", \"id\", \"type\"], [3, \"id\", \"formControlName\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"errorMessage\"]],\n  template: function DynamicFormQuestionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵtemplate(4, DynamicFormQuestionComponent_input_4_Template, 1, 3, \"input\", 2);\n      i0.ɵɵtemplate(5, DynamicFormQuestionComponent_select_5_Template, 2, 3, \"select\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, DynamicFormQuestionComponent_div_6_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"for\", ctx.question.key);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.question.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitch\", ctx.question.controlType);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"textbox\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"dropdown\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isValid);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i1.NgSwitch, i1.NgSwitchCase, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","ctx_r0","question","key","type","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","opt_r4","ɵɵadvance","ɵɵtextInterpolate","value","ɵɵtemplate","DynamicFormQuestionComponent_select_5_option_1_Template","ctx_r1","options","ɵɵtextInterpolate1","ctx_r2","label","DynamicFormQuestionComponent","isValid","form","controls","valid","selectors","inputs","decls","vars","consts","template","DynamicFormQuestionComponent_Template","rf","ctx","DynamicFormQuestionComponent_input_4_Template","DynamicFormQuestionComponent_select_5_Template","DynamicFormQuestionComponent_div_6_Template","ɵɵattribute","controlType"],"sources":["/home/adilson/project/Angular/NotesForProfessional/src/app/chapter2/components/dynamic-form-question/dynamic-form-question.component.ts","/home/adilson/project/Angular/NotesForProfessional/src/app/chapter2/components/dynamic-form-question/dynamic-form-question.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { QuestionBase } from '../../models/QuestionBase';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './dynamic-form-question.component.html'\n})\nexport class DynamicFormQuestionComponent {\n\n  @Input() question!: QuestionBase<string>;\n\n  @Input() form!: FormGroup;\n\n  get isValid() { return this.form.controls[this.question.key].valid; }\n}\n","<div [formGroup]=\"form\">\n\n  <label [attr.for]=\"question.key\">{{question.label}}</label>\n\n  <div [ngSwitch]=\"question.controlType\">\n\n    <input *ngSwitchCase=\"'textbox'\" [formControlName]=\"question.key\" [id]=\"question.key\" [type]=\"question.type\">\n\n    <select [id]=\"question.key\" *ngSwitchCase=\"'dropdown'\" [formControlName]=\"question.key\">\n      <option *ngFor=\"let opt of question.options\" [value]=\"opt.key\">{{opt.value}}</option>\n    </select>\n\n  </div>\n\n  <div class=\"errorMessage\" *ngIf=\"!isValid\">{{question.label}} is required</div>\n\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}