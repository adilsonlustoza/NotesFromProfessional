{"ast":null,"code":"import * as moment from 'moment';\nimport * as i0 from \"@angular/core\";\nexport let DynamicPipe = /*#__PURE__*/(() => {\n  class DynamicPipe {\n    transform(value, modifier) {\n      if (!modifier) return value;\n      // Evaluate pipe string\n      return eval('this.' + modifier + \"('\" + value + \"')\");\n    }\n    // Returns 'enabled' or 'disabled' based on input value\n    statusFromBoolean(value) {\n      switch (value) {\n        case 'true':\n        case '1':\n          return 'enabled';\n        default:\n          return 'disabled';\n      }\n    }\n    // Returns a human friendly time format e.g: '14 minutes ago', 'yesterday'\n    humanizeDate(value) {\n      // Humanize if date difference is within a week from now else returns 'December 20, 2016'  format\n      if (moment().diff(moment(value), 'days') < 8) return moment(value).fromNow();\n      return moment(value).format('MMMM Do YYYY');\n    }\n  }\n  DynamicPipe.ɵfac = function DynamicPipe_Factory(t) {\n    return new (t || DynamicPipe)();\n  };\n  DynamicPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"dynamic\",\n    type: DynamicPipe,\n    pure: true\n  });\n  return DynamicPipe;\n})();\nexport const DYNAMIC_PIPES = [DynamicPipe];","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}