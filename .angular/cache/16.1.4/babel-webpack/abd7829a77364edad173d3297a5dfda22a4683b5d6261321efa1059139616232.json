{"ast":null,"code":"import { inject } from '@angular/core';\nimport { UserService } from './user.service';\nexport const UserResolver = (route, state) => {\n  const paramValue = route.paramMap.get('id');\n  if (paramValue && paramValue !== '0') return inject(UserService).get(paramValue);else return inject(UserService).index();\n};","map":{"version":3,"names":["inject","UserService","UserResolver","route","state","paramValue","paramMap","get","index"],"sources":["/home/adilson/project/Angular/NotesForProfessional/src/app/chapter17/services/UsersResolver.ts"],"sourcesContent":["import { inject } from '@angular/core';\nimport {\n  ResolveFn,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { UserService } from './user.service';\nimport { User } from '../model/User';\n\nexport const UserResolver: ResolveFn<User[] | User> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot\n) => {\n  const paramValue: any = route.paramMap.get('id');\n\n  if (paramValue && paramValue!=='0') return inject(UserService).get(paramValue);\n  else return inject(UserService).index();\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AAMtC,SAASC,WAAW,QAAQ,gBAAgB;AAG5C,OAAO,MAAMC,YAAY,GAA6BA,CACpDC,KAA6B,EAC7BC,KAA0B,KACxB;EACF,MAAMC,UAAU,GAAQF,KAAK,CAACG,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;EAEhD,IAAIF,UAAU,IAAIA,UAAU,KAAG,GAAG,EAAE,OAAOL,MAAM,CAACC,WAAW,CAAC,CAACM,GAAG,CAACF,UAAU,CAAC,CAAC,KAC1E,OAAOL,MAAM,CAACC,WAAW,CAAC,CAACO,KAAK,EAAE;AACzC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}