{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/Question.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction Chapter2Component_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const person_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", person_r2.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(person_r2.name);\n  }\n}\nfunction Chapter2Component_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 15);\n    i0.ɵɵtext(2, \"Alias:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r4 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"alias-\", i_r4, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"alias-\", i_r4, \"\");\n    i0.ɵɵproperty(\"formControlName\", i_r4);\n  }\n}\nexport class Chapter2Component {\n  constructor(service) {\n    this.questions$ = service.getQuestions();\n  }\n  ngOnInit() {}\n}\nChapter2Component.ɵfac = function Chapter2Component_Factory(t) {\n  return new (t || Chapter2Component)(i0.ɵɵdirectiveInject(i1.QuestionService));\n};\nChapter2Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Chapter2Component,\n  selectors: [[\"app-chapter2\"]],\n  decls: 22,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"name\", \"firstName\", \"id\", \"firstName\", \"formControlName\", \"firstName\", 1, \"form-control\"], [\"for\", \"personType\"], [\"name\", \"personType\", \"id\", \"personType\", \"formControlName\", \"personType\", 1, \"form-control\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"formGroupName\", \"address\"], [\"for\", \"street\"], [\"type\", \"text\", \"name\", \"street\", \"id\", \"street\", \"formControlName\", \"street\", 1, \"form-control\"], [\"formArrayName\", \"aliases\"], [\"type\", \"button\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", \"value\", \"Salvar\", 1, \"btn\", \"btn-primary\", \"mt-4\"], [3, \"ngValue\"], [3, \"for\"], [\"type\", \"text\", 3, \"id\", \"formControlName\"]],\n  template: function Chapter2Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function Chapter2Component_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"firstName\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"personType\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"select\", 5);\n      i0.ɵɵtemplate(9, Chapter2Component_option_9_Template, 2, 2, \"option\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 7)(11, \"div\", 1)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"street\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 10)(16, \"h2\");\n      i0.ɵɵtext(17, \"Aliases\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function Chapter2Component_Template_button_click_18_listener() {\n        return ctx.addAlias();\n      });\n      i0.ɵɵtext(19, \"+ Add another alias\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, Chapter2Component_div_20_Template, 4, 3, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 13);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.profileForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.persons);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.aliases.controls);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName, i3.FormArrayName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","person_r2","type","ɵɵadvance","ɵɵtextInterpolate","name","ɵɵelement","ɵɵpropertyInterpolate1","i_r4","Chapter2Component","constructor","service","questions$","getQuestions","ngOnInit","ɵɵdirectiveInject","i1","QuestionService","selectors","decls","vars","consts","template","Chapter2Component_Template","rf","ctx","ɵɵlistener","Chapter2Component_Template_form_ngSubmit_0_listener","onSubmit","ɵɵtemplate","Chapter2Component_option_9_Template","Chapter2Component_Template_button_click_18_listener","addAlias","Chapter2Component_div_20_Template","profileForm","persons","aliases","controls"],"sources":["/home/adilson/project/Angular/NotesForProfessional/src/app/chapter2/chapter2.component.ts","/home/adilson/project/Angular/NotesForProfessional/src/app/chapter2/chapter2.component.html"],"sourcesContent":["import { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { QuestionBase } from './models/QuestionBase';\nimport { QuestionService } from './service/Question.service';\n\n@Component({\n  selector: 'app-chapter2',\n  templateUrl: './chapter2.component.html',\n  styleUrls: ['./chapter2.component.css']\n})\nexport class Chapter2Component implements OnInit {\n\n  questions$: Observable<QuestionBase<any>[]>;\n\n  constructor(service: QuestionService) {\n    this.questions$ = service.getQuestions();\n  }\n  ngOnInit(): void {\n\n  }\n\n}\n","<form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\n\n  <div class=\"form-group\">\n    <label for=\"firstName\">firstName</label>\n    <input type=\"text\" class=\"form-control\" name=\"firstName\" id=\"firstName\" formControlName=\"firstName\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"personType\">personType</label>\n    <select class=\"form-control\" name=\"personType\" id=\"personType\" formControlName=\"personType\">\n      <option *ngFor=\"let person of this.persons\" [ngValue]=\"person.type\">{{person.name}}</option>\n    </select>\n  </div>\n\n  <div formGroupName=\"address\">\n  <div class=\"form-group\">\n    <label for=\"street\">street</label>\n    <input type=\"text\" class=\"form-control\" name=\"street\" id=\"street\" formControlName=\"street\">\n  </div>\n  </div>\n\n<div formArrayName=\"aliases\">\n  <h2>Aliases</h2>\n  <button type=\"button\" (click)=\"addAlias()\">+ Add another alias</button>\n\n  <div *ngFor=\"let alias of aliases.controls; let i=index\">\n    <!-- The repeated alias template -->\n    <label for=\"alias-{{ i }}\">Alias:</label>\n    <input id=\"alias-{{ i }}\" type=\"text\" [formControlName]=\"i\">\n  </div>\n</div>\n\n\n  <input type=\"submit\" class=\"btn btn-primary mt-4\" value=\"Salvar\">\n\n\n\n\n</form>\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}