{"ast":null,"code":"import { DatePipe } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nexport class IfDatePipe {\n  constructor() {\n    this.datePipe = new DatePipe('en-US');\n  }\n  transform(value, pattern) {\n    if (typeof value === 'number') {\n      return value;\n    }\n    try {\n      return this.datePipe.transform(value, pattern);\n    } catch (error) {}\n  }\n}\nIfDatePipe.ɵfac = function IfDatePipe_Factory(t) {\n  return new (t || IfDatePipe)();\n};\nIfDatePipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"ifdate\",\n  type: IfDatePipe,\n  pure: true\n});","map":{"version":3,"names":["DatePipe","IfDatePipe","constructor","datePipe","transform","value","pattern","error","pure"],"sources":["/home/adilson/project/Angular/NotesForProfessional/src/app/chapter14/TableComponent/pipes/ifdate.pipe.ts"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'ifdate',\n  pure: true\n})\nexport class IfDatePipe implements PipeTransform {\n\n  private datePipe: DatePipe = new DatePipe('en-US');\n\n  transform(value: any, pattern: string): any {\n    if (typeof value === 'number') { return value }\n\n\n    try {\n      return this.datePipe.transform(value, pattern);\n    } catch (error) {\n\n    }\n\n\n  }\n\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,iBAAiB;;AAO1C,OAAM,MAAOC,UAAU;EAJvBC,YAAA;IAMU,KAAAC,QAAQ,GAAa,IAAIH,QAAQ,CAAC,OAAO,CAAC;;EAElDI,SAASA,CAACC,KAAU,EAAEC,OAAe;IACnC,IAAI,OAAOD,KAAK,KAAK,QAAQ,EAAE;MAAE,OAAOA,KAAK;;IAG7C,IAAI;MACF,OAAO,IAAI,CAACF,QAAQ,CAACC,SAAS,CAACC,KAAK,EAAEC,OAAO,CAAC;KAC/C,CAAC,OAAOC,KAAK,EAAE,C;EAKlB;;AAfWN,UAAU,C;mBAAVA,UAAU;AAAA;AAAVA,UAAU,C;;QAAVA,UAAU;EAAAO,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}