{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction Chapter2Component_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 3);\n    i0.ɵɵtext(2, \"Alias:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"alias-\", i_r2, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"alias-\", i_r2, \"\");\n    i0.ɵɵproperty(\"formControlName\", i_r2);\n  }\n}\nexport class Chapter2Component {\n  constructor(fb) {\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.profileForm = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: [''],\n      address: this.fb.group({\n        street: [''],\n        city: [''],\n        state: [''],\n        zip: ['']\n      }),\n      aliases: this.fb.array([this.fb.control('')])\n    });\n  }\n  get aliases() {\n    return this.profileForm.get('aliases');\n  }\n  addAlias() {\n    this.aliases.push(this.fb.control(''));\n  }\n}\nChapter2Component.ɵfac = function Chapter2Component_Factory(t) {\n  return new (t || Chapter2Component)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nChapter2Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Chapter2Component,\n  selectors: [[\"app-chapter2\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[\"formArrayName\", \"aliases\"], [\"type\", \"button\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"for\"], [\"type\", \"text\", 3, \"id\", \"formControlName\"]],\n  template: function Chapter2Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Aliases\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function Chapter2Component_Template_button_click_3_listener() {\n        return ctx.addAlias();\n      });\n      i0.ɵɵtext(4, \"+ Add another alias\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, Chapter2Component_div_5_Template, 4, 3, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.aliases.controls);\n    }\n  },\n  dependencies: [i2.NgForOf, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormControlName, i1.FormArrayName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵpropertyInterpolate1","i_r2","ɵɵproperty","Chapter2Component","constructor","fb","ngOnInit","profileForm","group","firstName","required","lastName","address","street","city","state","zip","aliases","array","control","get","addAlias","push","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","Chapter2Component_Template","rf","ctx","ɵɵlistener","Chapter2Component_Template_button_click_3_listener","ɵɵtemplate","Chapter2Component_div_5_Template","controls"],"sources":["/home/adilson/project/Angular/NotesForProfessional/src/app/chapter2/chapter2.component.ts","/home/adilson/project/Angular/NotesForProfessional/src/app/chapter2/chapter2.component.html"],"sourcesContent":["import { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chapter2',\n  templateUrl: './chapter2.component.html',\n  styleUrls: ['./chapter2.component.css']\n})\nexport class Chapter2Component implements OnInit {\n\n\n  profileForm!: FormGroup<any>;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n\n     this.profileForm = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: [''],\n      address: this.fb.group({\n        street: [''],\n        city: [''],\n        state: [''],\n        zip: ['']\n      }),\n      aliases: this.fb.array([\n        this.fb.control('')\n      ])\n    });\n\n  }\n\n  get aliases() {\n    return this.profileForm.get('aliases') as FormArray;\n  }\n\n  addAlias() {\n    this.aliases.push(this.fb.control(''));\n  }\n\n}\n","<div formArrayName=\"aliases\">\n  <h2>Aliases</h2>\n  <button type=\"button\" (click)=\"addAlias()\">+ Add another alias</button>\n\n  <div *ngFor=\"let alias of aliases.controls; let i=index\">\n    <!-- The repeated alias template -->\n    <label for=\"alias-{{ i }}\">Alias:</label>\n    <input id=\"alias-{{ i }}\" type=\"text\" [formControlName]=\"i\">\n  </div>\n</div>\n"],"mappings":"AAAA,SAA4CA,UAAU,QAAQ,gBAAgB;;;;;;ICI5EC,EAAA,CAAAC,cAAA,UAAyD;IAE5BD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACzCH,EAAA,CAAAI,SAAA,eAA4D;IAC9DJ,EAAA,CAAAG,YAAA,EAAM;;;;IAFGH,EAAA,CAAAK,SAAA,GAAmB;IAAnBL,EAAA,CAAAM,sBAAA,kBAAAC,IAAA,KAAmB;IACnBP,EAAA,CAAAK,SAAA,GAAkB;IAAlBL,EAAA,CAAAM,sBAAA,iBAAAC,IAAA,KAAkB;IAAaP,EAAA,CAAAQ,UAAA,oBAAAD,IAAA,CAAqB;;;ADC/D,OAAM,MAAOE,iBAAiB;EAK5BC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;EAAiB;EAEvCC,QAAQA,CAAA;IAEL,IAAI,CAACC,WAAW,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAChCC,SAAS,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACiB,QAAQ,CAAC;MACpCC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,OAAO,EAAE,IAAI,CAACP,EAAE,CAACG,KAAK,CAAC;QACrBK,MAAM,EAAE,CAAC,EAAE,CAAC;QACZC,IAAI,EAAE,CAAC,EAAE,CAAC;QACVC,KAAK,EAAE,CAAC,EAAE,CAAC;QACXC,GAAG,EAAE,CAAC,EAAE;OACT,CAAC;MACFC,OAAO,EAAE,IAAI,CAACZ,EAAE,CAACa,KAAK,CAAC,CACrB,IAAI,CAACb,EAAE,CAACc,OAAO,CAAC,EAAE,CAAC,CACpB;KACF,CAAC;EAEJ;EAEA,IAAIF,OAAOA,CAAA;IACT,OAAO,IAAI,CAACV,WAAW,CAACa,GAAG,CAAC,SAAS,CAAc;EACrD;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACJ,OAAO,CAACK,IAAI,CAAC,IAAI,CAACjB,EAAE,CAACc,OAAO,CAAC,EAAE,CAAC,CAAC;EACxC;;AA/BWhB,iBAAiB,C;mBAAjBA,iBAAiB,EAAAT,EAAA,CAAA6B,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAjBtB,iBAAiB,C;QAAjBA,iBAAiB;EAAAuB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR9BtC,EAAA,CAAAC,cAAA,aAA6B;MACvBD,EAAA,CAAAE,MAAA,cAAO;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAChBH,EAAA,CAAAC,cAAA,gBAA2C;MAArBD,EAAA,CAAAwC,UAAA,mBAAAC,mDAAA;QAAA,OAASF,GAAA,CAAAZ,QAAA,EAAU;MAAA,EAAC;MAAC3B,EAAA,CAAAE,MAAA,0BAAmB;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAEvEH,EAAA,CAAA0C,UAAA,IAAAC,gCAAA,iBAIM;MACR3C,EAAA,CAAAG,YAAA,EAAM;;;MALmBH,EAAA,CAAAK,SAAA,GAAqB;MAArBL,EAAA,CAAAQ,UAAA,YAAA+B,GAAA,CAAAhB,OAAA,CAAAqB,QAAA,CAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}