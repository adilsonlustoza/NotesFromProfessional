{"ast":null,"code":"import { FormGroup, Validators, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport class QuestionControlService {\n  toFormGroup(questions) {\n    const group = {};\n    questions.forEach(question => {\n      group[question.key] = question.required ? new FormControl(question.value || '', Validators.required) : new FormControl(question.value || '');\n    });\n    return new FormGroup(group);\n  }\n}\nQuestionControlService.ɵfac = function QuestionControlService_Factory(t) {\n  return new (t || QuestionControlService)();\n};\nQuestionControlService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: QuestionControlService,\n  factory: QuestionControlService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["FormGroup","Validators","FormControl","QuestionControlService","toFormGroup","questions","group","forEach","question","key","required","value","factory","ɵfac","providedIn"],"sources":["/home/adilson/project/Angular/NotesForProfessional/src/app/chapter2/service/QuestionControl.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { FormGroup, ValidatorFn, Validators, FormControl } from '@angular/forms';\nimport { of } from 'rxjs';\nimport { QuestionBase } from '../models/QuestionBase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionControlService {\n\n  toFormGroup(questions: QuestionBase<string>[]) {\n\n    const group: any = {};\n\n    questions.forEach(question => {\n\n      group[question.key] = question.required ?\n          new FormControl(question.value || '', Validators.required)\n        : new FormControl(question.value || '');\n    });\n\n\n    return new FormGroup(group);\n\n  }\n}\n"],"mappings":"AACA,SAASA,SAAS,EAAeC,UAAU,EAAEC,WAAW,QAAQ,gBAAgB;;AAOhF,OAAM,MAAOC,sBAAsB;EAEjCC,WAAWA,CAACC,SAAiC;IAE3C,MAAMC,KAAK,GAAQ,EAAE;IAErBD,SAAS,CAACE,OAAO,CAACC,QAAQ,IAAG;MAE3BF,KAAK,CAACE,QAAQ,CAACC,GAAG,CAAC,GAAGD,QAAQ,CAACE,QAAQ,GACnC,IAAIR,WAAW,CAACM,QAAQ,CAACG,KAAK,IAAI,EAAE,EAAEV,UAAU,CAACS,QAAQ,CAAC,GAC1D,IAAIR,WAAW,CAACM,QAAQ,CAACG,KAAK,IAAI,EAAE,CAAC;IAC3C,CAAC,CAAC;IAGF,OAAO,IAAIX,SAAS,CAACM,KAAK,CAAC;EAE7B;;AAhBWH,sBAAsB,C;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB,C;SAAtBA,sBAAsB;EAAAS,OAAA,EAAtBT,sBAAsB,CAAAU,IAAA;EAAAC,UAAA,EAFrB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}